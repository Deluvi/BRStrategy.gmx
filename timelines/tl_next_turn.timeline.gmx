<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<timeline>
  <entry>
    <step>1</step>
    <event>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Trigger player action
global.player_turn = true
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </entry>
  <entry>
    <step>15</step>
    <event>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check if any enemy should die

var i;
for (i = 0; i &lt; instance_number(obj_enemy); i += 1) {
    var enemy = instance_find(obj_enemy,i);
    if enemy.hp &lt;= 0 {
        instance_destroy(enemy)
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Trigger ennemies actions

global.enemy_turn = true
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </entry>
  <entry>
    <step>16</step>
    <event>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Spawn new enemies

if random(100) &gt; 90 {
    var player = instance_find(obj_player,0)
    switch choose(1,2,3,4) {
        case 1:
            if is_tile_walkable(player.x + (player.range + 1)*32,player.y) {
                var new_enemy = instance_create(player.x + (player.range + 1)*32,player.y,obj_enemy)
                with new_enemy {
                    move_snap(32,32)
                    set_stat_level(1)
                    cell_x = floor(x/32)
                    cell_y = floor(y/32)
                }
            }
            else if is_tile_walkable(player.x - (player.range + 1)*32,player.y) {
                var new_enemy = instance_create(player.x - (player.range + 1) *32,player.y,obj_enemy)
                with new_enemy {
                    move_snap(32,32)
                    set_stat_level(1)
                    cell_x = floor(x/32)
                    cell_y = floor(y/32)
                }
            }
            break
        case 2:
            if is_tile_walkable(player.x,player.y + (player.range + 1)*32) {
                var new_enemy = instance_create(player.x,player.y + (player.range + 1)*32,obj_enemy)
                with new_enemy {
                    move_snap(32,32)
                    set_stat_level(1)
                    cell_x = floor(x/32)
                    cell_y = floor(y/32)
                }
            }
            else if is_tile_walkable(player.x,player.y - (player.range + 1)*32) {
                var new_enemy = instance_create(player.x,player.y - (player.range + 1)*32,obj_enemy)
                with new_enemy {
                    move_snap(32,32)
                    set_stat_level(1)
                    cell_x = floor(x/32)
                    cell_y = floor(y/32)
                }
            }
            break
        case 3:
            if is_tile_walkable(player.x + (player.range + 1)*32,player.y) and is_tile_walkable(player.x - (player.range + 1)*32,player.y) {
                var new_enemy = instance_create(player.x + (player.range + 1)*32,player.y,obj_enemy)
                with new_enemy {
                    move_snap(32,32)
                    set_stat_level(1)
                    cell_x = floor(x/32)
                    cell_y = floor(y/32)
                }
                
                new_enemy = instance_create(player.x - (player.range + 1) *32,player.y,obj_enemy)
                with new_enemy {
                    move_snap(32,32)
                    set_stat_level(1)
                    cell_x = floor(x/32)
                    cell_y = floor(y/32)
                }
            }
            break
        case 4:
            if is_tile_walkable(player.x,player.y + (player.range + 1)*32) and is_tile_walkable(player.x,player.y - (player.range + 1)*32) {
                var new_enemy = instance_create(player.x,player.y + (player.range + 1)*32,obj_enemy)
                with new_enemy {
                    move_snap(32,32)
                    set_stat_level(1)
                    cell_x = floor(x/32)
                    cell_y = floor(y/32)
                }
                
                new_enemy = instance_create(player.x,player.y - (player.range + 1)*32,obj_enemy)
                with new_enemy {
                    move_snap(32,32)
                    set_stat_level(1)
                    cell_x = floor(x/32)
                    cell_y = floor(y/32)
                }
            }
            break
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check if any enemy is in range
global.enemy_turn = false
var i
var is_in_range = false
var player = instance_find(obj_player,0)
for (i = 0; i &lt; instance_number(obj_enemy); i += 1) {
    var enemy = instance_find(obj_enemy,i)
    if abs(player.cell_x - enemy.cell_x) + abs(player.cell_y - enemy.cell_y) &lt;= player.range {
        is_in_range = true
    }
}
with obj_GUI {
    btn_attack_visible = is_in_range
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check if on loot tile
var player = instance_find(obj_player,0)

with obj_GUI {
    btn_loot_visible = tile_get_background(tile_layer_find(1000000,player.cell_x*32,player.cell_y*32)) == bgd_city
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>308</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_timeline_stop</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </entry>
</timeline>
