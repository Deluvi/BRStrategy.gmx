<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize end of turn button

btn_end_turn_width = 150
btn_end_turn_height = 50
btn_end_turn_x = view_wport[0] - btn_end_turn_width - 10
btn_end_turn_y = view_hport[0] - btn_end_turn_height - 10 
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize loot button

btn_loot_width = 50
btn_loot_height = 50
btn_loot_x = view_wport[0] - btn_end_turn_width - btn_loot_height - 10 - 10
btn_loot_y = view_hport[0] - btn_loot_height - 10
btn_loot_visible = true
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize attack button

btn_attack_width = 75
btn_attack_height = 50
btn_attack_x = view_wport[0] - btn_end_turn_width - btn_loot_width - btn_attack_width - 10 - 10 - 10
btn_attack_y = view_hport[0] - btn_attack_height - 10
btn_attack_visible = true
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>305</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_timeline_set</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>14</kind>
            <timeline>tl_next_turn</timeline>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check if the end of turn button has been clicked
if mouse_check_button(mb_left) {

    var btn_end_turn_x2 = btn_end_turn_x + btn_end_turn_width
    var btn_end_turn_y2 = btn_end_turn_y + btn_end_turn_height
    var mx = mouse_x
    var my = mouse_y
    var mx2 = mouse_x*2
    var my2 = mouse_y*2
    
    if point_in_rectangle(window_mouse_get_x(),window_mouse_get_y(),btn_end_turn_x, btn_end_turn_y, btn_end_turn_x2, btn_end_turn_y2) {
        if is_player_wish_valid() {
            if !timeline_running {
                timeline_running = true;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check if the loot button has been clicked
if mouse_check_button(mb_left) {

    var btn_loot_x2 = btn_loot_x + btn_loot_width
    var btn_loot_y2 = btn_loot_y + btn_loot_height
    var mx = mouse_x
    var my = mouse_y
    var mx2 = mouse_x*2
    var my2 = mouse_y*2
    
    if btn_loot_visible and point_in_rectangle(window_mouse_get_x(),window_mouse_get_y(),btn_loot_x, btn_loot_y, btn_loot_x2, btn_loot_y2) {
        with instance_find(obj_player,0) {
            wish_action = "Loot"
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check if the attack button has been clicked
if mouse_check_button(mb_left) {

    var btn_attack_x2 = btn_attack_x + btn_attack_width
    var btn_attack_y2 = btn_attack_y + btn_attack_height
    var mx = mouse_x
    var my = mouse_y
    var mx2 = mouse_x*2
    var my2 = mouse_y*2
    
    if btn_attack_visible and point_in_rectangle(window_mouse_get_x(),window_mouse_get_y(),btn_attack_x, btn_attack_y, btn_attack_x2, btn_attack_y2) {
        with instance_find(obj_player,0) {
            wish_action = "Attack"
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw end of turn button
var btn_end_turn_x2 = btn_end_turn_x + btn_end_turn_width
var btn_end_turn_y2 = btn_end_turn_y + btn_end_turn_height

draw_set_color(c_gray)
draw_rectangle(btn_end_turn_x, btn_end_turn_y, btn_end_turn_x2, btn_end_turn_y2,false)
draw_set_font(fnt_standard)
draw_set_color(c_white)
draw_text(btn_end_turn_x + 10, btn_end_turn_y + 15, "End of turn")
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw loot button

if btn_loot_visible {
    var btn_loot_x2 = btn_loot_x + btn_loot_width
    var btn_loot_y2 = btn_loot_y + btn_loot_height
    
    draw_set_color(c_yellow)
    draw_rectangle(btn_loot_x, btn_loot_y, btn_loot_x2, btn_loot_y2,false)
    draw_set_font(fnt_standard)
    draw_set_color(c_white)
    draw_text(btn_loot_x + 5, btn_loot_y + 15, "Loot")
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw attack button

if btn_attack_visible {
    var btn_attack_x2 = btn_attack_x + btn_attack_width
    var btn_attack_y2 = btn_attack_y + btn_attack_height
    
    draw_set_color(c_red)
    draw_rectangle(btn_attack_x, btn_attack_y, btn_attack_x2, btn_attack_y2,false)
    draw_set_font(fnt_standard)
    draw_set_color(c_white)
    draw_text(btn_attack_x + 5, btn_attack_y + 15, "Attack")
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw player wish

var player = instance_find(obj_player,0)

if player.wish_action != "None" {
    draw_set_color(c_grey)
    draw_text(btn_end_turn_x + 10, btn_end_turn_y - 25, player.wish_action)

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
